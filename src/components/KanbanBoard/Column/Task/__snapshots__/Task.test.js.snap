// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render Task component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="row m-0 bg-white border border-3 border-success mt-3 rounded shadow p-1"
        style="transform: translate3d(0px, 0px, 0);"
      >
        <div
          class="col-11"
        >
          <p
            class="fw-bold text-capitalize"
          >
            <span>
              <span
                class=""
              >
                Task Title
              </span>
            </span>
          </p>
        </div>
        <div
          class="col-1"
        >
          <i
            aria-describedby=""
            aria-disabled="false"
            aria-pressed="true"
            aria-roledescription="draggable"
            class="bi bi-grip-horizontal fs-2"
            role="button"
            tabindex="0"
          />
        </div>
        <div
          class="text-secondary overflow-auto task-description"
        >
          <div>
            <span>
              <span
                class=""
              >
                Task Description
              </span>
            </span>
          </div>
        </div>
        <div
          class="mb-3 d-flex align-items-center flex-wrap"
        />
        <div
          class="d-flex justify-content-between"
        >
          <div>
            <i
              class="bi bi-trash fs-4 text-danger"
              role="button"
            />
            <i
              class="bi bi-pencil-square fs-4 text-secondary mx-1"
              role="button"
            />
            <i
              class="bi bi-person-circle fs-4 text-secondary mx-1"
              role="button"
            />
            <i
              class="bi bi-unlock-fill fs-4 text-secondary mx-1"
              role="button"
            />
          </div>
          <i
            class="bi bi-bookmark-fill fs-4 text-success"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="row m-0 bg-white border border-3 border-success mt-3 rounded shadow p-1"
      style="transform: translate3d(0px, 0px, 0);"
    >
      <div
        class="col-11"
      >
        <p
          class="fw-bold text-capitalize"
        >
          <span>
            <span
              class=""
            >
              Task Title
            </span>
          </span>
        </p>
      </div>
      <div
        class="col-1"
      >
        <i
          aria-describedby=""
          aria-disabled="false"
          aria-pressed="true"
          aria-roledescription="draggable"
          class="bi bi-grip-horizontal fs-2"
          role="button"
          tabindex="0"
        />
      </div>
      <div
        class="text-secondary overflow-auto task-description"
      >
        <div>
          <span>
            <span
              class=""
            >
              Task Description
            </span>
          </span>
        </div>
      </div>
      <div
        class="mb-3 d-flex align-items-center flex-wrap"
      />
      <div
        class="d-flex justify-content-between"
      >
        <div>
          <i
            class="bi bi-trash fs-4 text-danger"
            role="button"
          />
          <i
            class="bi bi-pencil-square fs-4 text-secondary mx-1"
            role="button"
          />
          <i
            class="bi bi-person-circle fs-4 text-secondary mx-1"
            role="button"
          />
          <i
            class="bi bi-unlock-fill fs-4 text-secondary mx-1"
            role="button"
          />
        </div>
        <i
          class="bi bi-bookmark-fill fs-4 text-success"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`should render Task component as a template 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="row m-0 bg-white undefined mt-3 rounded shadow p-1"
        style="transform: translate3d(0px, 0px, 0);"
      >
        <div
          class="col-11"
        >
          <p
            class="fw-bold text-capitalize"
          >
            <span />
          </p>
          <span
            class="badge bg-primary"
          >
            This task is a template
          </span>
        </div>
        <div
          class="col-1"
        >
          <i
            aria-describedby=""
            aria-disabled="false"
            aria-pressed="true"
            aria-roledescription="draggable"
            class="bi bi-grip-horizontal fs-2"
            role="button"
            tabindex="0"
          />
        </div>
        <div
          class="text-secondary overflow-auto task-description"
        >
          <div>
            <span>
              <span
                class=""
              >
                Template Description
              </span>
            </span>
          </div>
        </div>
        <div
          class="mb-3 d-flex align-items-center flex-wrap"
        />
        <div
          class="d-flex justify-content-between"
        >
          <div>
            <i
              class="bi bi-trash fs-4 text-danger"
              role="button"
            />
            <i
              class="bi bi-pencil-square fs-4 text-secondary mx-1"
              role="button"
            />
            <i
              class="bi bi-unlock-fill fs-4 text-secondary mx-1"
              role="button"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="row m-0 bg-white undefined mt-3 rounded shadow p-1"
      style="transform: translate3d(0px, 0px, 0);"
    >
      <div
        class="col-11"
      >
        <p
          class="fw-bold text-capitalize"
        >
          <span />
        </p>
        <span
          class="badge bg-primary"
        >
          This task is a template
        </span>
      </div>
      <div
        class="col-1"
      >
        <i
          aria-describedby=""
          aria-disabled="false"
          aria-pressed="true"
          aria-roledescription="draggable"
          class="bi bi-grip-horizontal fs-2"
          role="button"
          tabindex="0"
        />
      </div>
      <div
        class="text-secondary overflow-auto task-description"
      >
        <div>
          <span>
            <span
              class=""
            >
              Template Description
            </span>
          </span>
        </div>
      </div>
      <div
        class="mb-3 d-flex align-items-center flex-wrap"
      />
      <div
        class="d-flex justify-content-between"
      >
        <div>
          <i
            class="bi bi-trash fs-4 text-danger"
            role="button"
          />
          <i
            class="bi bi-pencil-square fs-4 text-secondary mx-1"
            role="button"
          />
          <i
            class="bi bi-unlock-fill fs-4 text-secondary mx-1"
            role="button"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
